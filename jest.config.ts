import type { Config } from 'jest';

const config: Config = {
  moduleFileExtensions: ['js', 'json', 'ts'],
  rootDir: 'src',
  testRegex: '.*\\.spec\\.ts$',
  transform: {
    '^.+\\.tsx?$': 'ts-jest',
  },
  collectCoverageFrom: ['**/*.(t|j)s'],
  moduleNameMapper: {
    '^@dale/auth/(.*)': '<rootDir>/shared/providers/auth0/modules/auth/$1',
    '^@dale/client/(.*)': '<rootDir>/client/$1',
    '^@dale/monetary-adjustment/(.*)': '<rootDir>/monetary-adjustment/$1',
    '^@dale/notifications/(.*)': '<rootDir>/notifications/$1',
    '^@dale/user-work-balancer/(.*)': '<rootDir>/shared/user-work-balancer/$1',
    '^@dale/exceptions/(.*)': '<rootDir>/shared/errors/$1',
    '^@dale/db/(.*)': '<rootDir>/shared/db/$1',
    '^@dale/testcases/(.*)': '<rootDir>/shared/testcases/$1',
    '^@dale/crm-connector-adapter/(.*)':
      '<rootDir>/shared/providers/crm-connector-adapter/$1',
    '^@dale/http-adapters/(.*)': '<rootDir>/shared/providers/http-adapters/$1',
    '^@dale/mambu-connector-adapter/(.*)':
      '<rootDir>/shared/providers/mambu-connector-adapter/$1',
    '^@dale/pts-connector/(.*)':
      '<rootDir>/shared/providers/pts-connector-adapter/$1',
    '^@dale/permissions/(.*)': '<rootDir>/shared/utils/permissions/$1',
    '^@dale/session-time/(.*)': '<rootDir>/session-time/$1',
    '^@dale/roles/(.*)': '<rootDir>/roles/$1',
    '^@dale/interceptors/(.*)': '<rootDir>/shared/interceptors/$1',
    '^@dale/transaction-codes/(.*)': '<rootDir>/transaction-codes/$1',
  },
  coverageDirectory: '../coverage',
  testEnvironment: 'node',
  coveragePathIgnorePatterns: [
    'src/main.ts',
    'src/common/config.ts',
    'src/common/constants.ts',
    'src/client/client.module.ts',
    'src/configuration',
    'src/utils',
    'src/backoffice.module.ts',
    'shared/db/db.module.ts',
    'shared/config/db-config.ts',
    'shared/config/typeorm.config.ts',
    'monetary-adjustment/monetary-adjustment.module.ts',
    'monetary-adjustment/repositories/monetary-adjustments-repositories.module.ts',
    'monetary-adjustment/repositories/transaction-codes/transaction-codes.module.ts',
    'monetary-adjustment/repositories/activity-update/adjustment-registrer.module.ts',
    'monetary-adjustment/repositories/monetary-adjustment/monetary-adjustment.module.ts',
    'monetary-adjustment/repositories/file-monetary-adjustment/massive-monetary-adjustment-file.module.ts',
    'monetary-adjustment/monetary-adjustments-repositories.module.ts',
    'src/shared/providers/auth0-management-api/auth0-management.module.ts',
    'src/health/health.module.ts',
    'seeds',
    'notifications/notifications.module.ts',
    'notifications/repositories/notifications/notifications-repository.module.ts',
    'user-work-balancer/user-work-balancer.module.ts',
    'shared/db/migration',
    'notifications/notification.module.ts',
    'notifications/repositories/notification.module.ts',
    'user-work-balancer/user-work-balancer.module.ts',
    'shared/db/migration',
    'index.ts',
  ],
  coverageThreshold: {
    global: {
      functions: 80,
      lines: 80,
      statements: 80,
    },
  },
};

export default config;
